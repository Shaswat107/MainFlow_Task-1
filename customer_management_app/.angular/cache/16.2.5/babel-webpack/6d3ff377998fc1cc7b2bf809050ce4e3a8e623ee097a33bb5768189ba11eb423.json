{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class CustomerService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.customeId = \"\";\n    this.apiUrl = 'https://qa2.sunbasedata.com/sunbase/portal/api/assignment.jsp';\n  }\n  generateToken(data) {\n    console.log(data);\n    return this.httpClient.post('https://qa2.sunbasedata.com/sunbase/portal/api/assignment_auth.jsp', data);\n  }\n  //to check that the user is logged in or not !!\n  loginUser(token) {\n    localStorage.setItem('token', token);\n    return true;\n  }\n  isLoggedIn() {\n    let token = localStorage.getItem('token');\n    if (token == undefined || token === '' || token == null) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n  logout() {\n    localStorage.removeItem('token');\n    return true;\n  }\n  getToken() {\n    return localStorage.getItem('token');\n  }\n  getCustomers() {\n    return this.httpClient.get('http://localhost:9091/api/v1/get-all');\n  }\n  // 'https://qa2.sunbasedata.com/sunbase/portal/api/assignment.jsp?cmd=get_customer_list'\n  getOnlyCustomer(id) {\n    this.customeId = id;\n  }\n  storeData(data) {\n    // Construct the full URL\n    const url = \"https://qa2.sunbasedata.com/sunbase/portal/api/assignment.jsp?cmd=create\";\n    // Make an HTTP POST request\n    return this.httpClient.post(url, data);\n  }\n  updateCustomer(customerObj) {\n    // Construct the full URL\n    // const url = `${this.apiUrl}?cmd=update&uuid=${customerObj.uuid}`\n    const url = \"http://localhost:9091/api/v1/update-user\";\n    console.log(this.customeId);\n    console.log(customerObj);\n    // Make an HTTP POST request\n    return this.httpClient.put(url, customerObj);\n  }\n  deleteUser(uuid) {\n    // Construct the full URL\n    // Make an HTTP POST request\n    console.log(uuid);\n    const url = 'http://localhost:9091/api/v1/delete/' + uuid;\n    console.log(url);\n    return this.httpClient.delete('http://localhost:9091/api/v1/delete/' + uuid);\n  }\n  static #_ = this.ɵfac = function CustomerService_Factory(t) {\n    return new (t || CustomerService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: CustomerService,\n    factory: CustomerService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["CustomerService","constructor","httpClient","customeId","apiUrl","generateToken","data","console","log","post","loginUser","token","localStorage","setItem","isLoggedIn","getItem","undefined","logout","removeItem","getToken","getCustomers","get","getOnlyCustomer","id","storeData","url","updateCustomer","customerObj","put","deleteUser","uuid","delete","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\shasw\\Downloads\\customer_management_app\\src\\app\\service\\customer.service.ts"],"sourcesContent":["import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Customer } from '../model/Customer';\nimport { User } from '../model/User';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CustomerService {\n\n\n  customeId:string =\"\";\n  private apiUrl =\n    'https://qa2.sunbasedata.com/sunbase/portal/api/assignment.jsp';\n    \n  constructor(private httpClient: HttpClient) {}\n\n  generateToken(data: any): Observable<any> {\n    console.log(data);\n    return this.httpClient.post(\n      'https://qa2.sunbasedata.com/sunbase/portal/api/assignment_auth.jsp', data);\n  }\n  //to check that the user is logged in or not !!\n  loginUser(token: any) {\n    localStorage.setItem('token', token);\n    return true;\n  }\n\n  isLoggedIn() {\n    let token = localStorage.getItem('token');\n    if (token == undefined || token === '' || token == null) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  logout() {\n    localStorage.removeItem('token');\n    return true;\n  }\n\n  getToken() {\n    return localStorage.getItem('token');\n  }\n\n  getCustomers(): Observable<any> {\n    return this.httpClient.get('http://localhost:9091/api/v1/get-all');\n  }\n   // 'https://qa2.sunbasedata.com/sunbase/portal/api/assignment.jsp?cmd=get_customer_list'\n\n  getOnlyCustomer(id:string){\n   this.customeId = id;\n  }\n  storeData(data:Customer){\n  // Construct the full URL\n  const url = \"https://qa2.sunbasedata.com/sunbase/portal/api/assignment.jsp?cmd=create\"\n  // Make an HTTP POST request\n  return this.httpClient.post(url,data);\n  }\n\n  updateCustomer(customerObj:User){\n  \n  // Construct the full URL\n  // const url = `${this.apiUrl}?cmd=update&uuid=${customerObj.uuid}`\n  const url  = \"http://localhost:9091/api/v1/update-user\"\n  console.log(this.customeId);\n  console.log(customerObj);\n  \n  \n  // Make an HTTP POST request\n  return this.httpClient.put(url,customerObj);\n  }\n\n\n\n  deleteUser(uuid: any) {\n    // Construct the full URL\n    // Make an HTTP POST request\n    console.log(uuid);\n    const url = 'http://localhost:9091/api/v1/delete/'+uuid;\n    console.log(url);\n    \n    return this.httpClient.delete('http://localhost:9091/api/v1/delete/'+uuid);\n  }\n}\n"],"mappings":";;AASA,OAAM,MAAOA,eAAe;EAO1BC,YAAoBC,UAAsB;IAAtB,KAAAA,UAAU,GAAVA,UAAU;IAJ9B,KAAAC,SAAS,GAAS,EAAE;IACZ,KAAAC,MAAM,GACZ,+DAA+D;EAEpB;EAE7CC,aAAaA,CAACC,IAAS;IACrBC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;IACjB,OAAO,IAAI,CAACJ,UAAU,CAACO,IAAI,CACzB,oEAAoE,EAAEH,IAAI,CAAC;EAC/E;EACA;EACAI,SAASA,CAACC,KAAU;IAClBC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEF,KAAK,CAAC;IACpC,OAAO,IAAI;EACb;EAEAG,UAAUA,CAAA;IACR,IAAIH,KAAK,GAAGC,YAAY,CAACG,OAAO,CAAC,OAAO,CAAC;IACzC,IAAIJ,KAAK,IAAIK,SAAS,IAAIL,KAAK,KAAK,EAAE,IAAIA,KAAK,IAAI,IAAI,EAAE;MACvD,OAAO,KAAK;KACb,MAAM;MACL,OAAO,IAAI;;EAEf;EAEAM,MAAMA,CAAA;IACJL,YAAY,CAACM,UAAU,CAAC,OAAO,CAAC;IAChC,OAAO,IAAI;EACb;EAEAC,QAAQA,CAAA;IACN,OAAOP,YAAY,CAACG,OAAO,CAAC,OAAO,CAAC;EACtC;EAEAK,YAAYA,CAAA;IACV,OAAO,IAAI,CAAClB,UAAU,CAACmB,GAAG,CAAC,sCAAsC,CAAC;EACpE;EACC;EAEDC,eAAeA,CAACC,EAAS;IACxB,IAAI,CAACpB,SAAS,GAAGoB,EAAE;EACpB;EACAC,SAASA,CAAClB,IAAa;IACvB;IACA,MAAMmB,GAAG,GAAG,0EAA0E;IACtF;IACA,OAAO,IAAI,CAACvB,UAAU,CAACO,IAAI,CAACgB,GAAG,EAACnB,IAAI,CAAC;EACrC;EAEAoB,cAAcA,CAACC,WAAgB;IAE/B;IACA;IACA,MAAMF,GAAG,GAAI,0CAA0C;IACvDlB,OAAO,CAACC,GAAG,CAAC,IAAI,CAACL,SAAS,CAAC;IAC3BI,OAAO,CAACC,GAAG,CAACmB,WAAW,CAAC;IAGxB;IACA,OAAO,IAAI,CAACzB,UAAU,CAAC0B,GAAG,CAACH,GAAG,EAACE,WAAW,CAAC;EAC3C;EAIAE,UAAUA,CAACC,IAAS;IAClB;IACA;IACAvB,OAAO,CAACC,GAAG,CAACsB,IAAI,CAAC;IACjB,MAAML,GAAG,GAAG,sCAAsC,GAACK,IAAI;IACvDvB,OAAO,CAACC,GAAG,CAACiB,GAAG,CAAC;IAEhB,OAAO,IAAI,CAACvB,UAAU,CAAC6B,MAAM,CAAC,sCAAsC,GAACD,IAAI,CAAC;EAC5E;EAAC,QAAAE,CAAA,G;qBA5EUhC,eAAe,EAAAiC,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAfrC,eAAe;IAAAsC,OAAA,EAAftC,eAAe,CAAAuC,IAAA;IAAAC,UAAA,EAFd;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}