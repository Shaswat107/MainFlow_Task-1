{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../service/customer.service\";\nimport * as i2 from \"@angular/router\";\nexport class DashboardComponent {\n  constructor(service, route) {\n    this.service = service;\n    this.route = route;\n    this.customersRecord = [];\n  }\n  ngOnInit() {\n    this.getCustomers();\n  }\n  getCustomers() {\n    this.service.getCustomers().subscribe(data => {\n      console.log(data);\n      this.customersRecord = data;\n      //   this.customersRecord.forEach((data)=>{\n      //     console.log(data);}\n      // )\n    });\n  }\n\n  deleteUser(id) {\n    console.log(id);\n    this.service.deleteUser(id).subscribe();\n    alert(\"succcessfully deleted\");\n    window.location.reload();\n  }\n  update(id) {\n    console.log(id);\n    this.service.getOnlyCustomer(id);\n    this.route.navigate(['update']);\n  }\n  logOut() {\n    localStorage.removeItem('token');\n    this.route.navigate(['login']);\n  }\n  static #_ = this.ɵfac = function DashboardComponent_Factory(t) {\n    return new (t || DashboardComponent)(i0.ɵɵdirectiveInject(i1.CustomerService), i0.ɵɵdirectiveInject(i2.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DashboardComponent,\n    selectors: [[\"app-dashboard\"]],\n    decls: 21,\n    vars: 0,\n    consts: [[1, \"navbar\", \"navbar-light\", \"bg-primary\"], [1, \"container-fluid\"], [1, \"d-flex\"], [\"routerLink\", \"/create\", 1, \"btn\", \"btn-danger\", \"mx-3\"], [1, \"btn\", \"btn-danger\", \"mx-3\", 3, \"click\"], [1, \"table\", \"table-primary\", \"mt-5\"], [\"scope\", \"col\"]],\n    template: function DashboardComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"nav\", 0)(1, \"div\", 1)(2, \"h2\");\n        i0.ɵɵtext(3, \" Welcome to Admin Dashboard \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"div\", 2)(5, \"button\", 3);\n        i0.ɵɵtext(6, \"Add-Customer\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"button\", 4);\n        i0.ɵɵlistener(\"click\", function DashboardComponent_Template_button_click_7_listener() {\n          return ctx.logOut();\n        });\n        i0.ɵɵtext(8, \"Log-Out\");\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(9, \"div\", 1)(10, \"table\", 5)(11, \"thead\")(12, \"tr\")(13, \"th\", 6);\n        i0.ɵɵtext(14, \"userId\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"th\", 6);\n        i0.ɵɵtext(16, \"userName\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"th\", 6);\n        i0.ɵɵtext(18, \"address\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"th\", 6);\n        i0.ɵɵtext(20, \"email\");\n        i0.ɵɵelementEnd()()()()();\n      }\n    },\n    dependencies: [i2.RouterLink],\n    styles: [\".card[_ngcontent-%COMP%]{\\n    margin-top: 15px;\\n    border: 5px solid rgb(255, 187, 0);\\n    width : 550px;\\n    padding: 45px;\\n    position: absolute;\\n    top: 25%;\\n    left:35%;\\n}\\na[_ngcontent-%COMP%]{\\n    margin-top: 15px;\\n}\\n#second-txt[_ngcontent-%COMP%]{\\n    position: absolute;\\n    top: 13px;\\n    left: 1680px;\\n} \\nh2[_ngcontent-%COMP%]{\\n    color: rgb(242, 227, 18);\\n    font-size: xx-large;\\n    font-weight: bolder;\\n    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\\n    margin-top: 5px;\\n    margin-left: 55px;\\n    opacity: 2.5;\\n}\\nnav[_ngcontent-%COMP%]{\\n    opacity: 0.8;\\n}\\n\\n.form-control[_ngcontent-%COMP%]:focus:valid {\\n   \\n    box-shadow: 0 0 0 0.2rem rgba(18, 232, 6, 0.25);\\n    opacity: 0.9;\\n} \\n\\n\\n.form-control[_ngcontent-%COMP%]:focus:invalid {\\n   \\n    box-shadow: 0 0 0 0.2rem rgba(233, 17, 10, 0.918);\\n    opacity: 0.5;\\n}\\n.changewarningcolor[_ngcontent-%COMP%]{\\n    color: brown;\\n}\\n\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvZGFzaGJvYXJkL2Rhc2hib2FyZC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksZ0JBQWdCO0lBQ2hCLGtDQUFrQztJQUNsQyxhQUFhO0lBQ2IsYUFBYTtJQUNiLGtCQUFrQjtJQUNsQixRQUFRO0lBQ1IsUUFBUTtBQUNaO0FBQ0E7SUFDSSxnQkFBZ0I7QUFDcEI7QUFDQTtJQUNJLGtCQUFrQjtJQUNsQixTQUFTO0lBQ1QsWUFBWTtBQUNoQjtBQUNBO0lBQ0ksd0JBQXdCO0lBQ3hCLG1CQUFtQjtJQUNuQixtQkFBbUI7SUFDbkIsNERBQTREO0lBQzVELGVBQWU7SUFDZixpQkFBaUI7SUFDakIsWUFBWTtBQUNoQjtBQUNBO0lBQ0ksWUFBWTtBQUNoQjs7QUFFQTs7SUFFSSwrQ0FBK0M7SUFDL0MsWUFBWTtBQUNoQjs7O0FBR0E7O0lBRUksaURBQWlEO0lBQ2pELFlBQVk7QUFDaEI7QUFDQTtJQUNJLFlBQVk7QUFDaEIiLCJzb3VyY2VzQ29udGVudCI6WyIuY2FyZHtcclxuICAgIG1hcmdpbi10b3A6IDE1cHg7XHJcbiAgICBib3JkZXI6IDVweCBzb2xpZCByZ2IoMjU1LCAxODcsIDApO1xyXG4gICAgd2lkdGggOiA1NTBweDtcclxuICAgIHBhZGRpbmc6IDQ1cHg7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICB0b3A6IDI1JTtcclxuICAgIGxlZnQ6MzUlO1xyXG59XHJcbmF7XHJcbiAgICBtYXJnaW4tdG9wOiAxNXB4O1xyXG59XHJcbiNzZWNvbmQtdHh0e1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgdG9wOiAxM3B4O1xyXG4gICAgbGVmdDogMTY4MHB4O1xyXG59IFxyXG5oMntcclxuICAgIGNvbG9yOiByZ2IoMjQyLCAyMjcsIDE4KTtcclxuICAgIGZvbnQtc2l6ZTogeHgtbGFyZ2U7XHJcbiAgICBmb250LXdlaWdodDogYm9sZGVyO1xyXG4gICAgZm9udC1mYW1pbHk6ICdTZWdvZSBVSScsIFRhaG9tYSwgR2VuZXZhLCBWZXJkYW5hLCBzYW5zLXNlcmlmO1xyXG4gICAgbWFyZ2luLXRvcDogNXB4O1xyXG4gICAgbWFyZ2luLWxlZnQ6IDU1cHg7XHJcbiAgICBvcGFjaXR5OiAyLjU7XHJcbn1cclxubmF2e1xyXG4gICAgb3BhY2l0eTogMC44O1xyXG59XHJcblxyXG4uZm9ybS1jb250cm9sOmZvY3VzOnZhbGlkIHtcclxuICAgXHJcbiAgICBib3gtc2hhZG93OiAwIDAgMCAwLjJyZW0gcmdiYSgxOCwgMjMyLCA2LCAwLjI1KTtcclxuICAgIG9wYWNpdHk6IDAuOTtcclxufSBcclxuXHJcblxyXG4uZm9ybS1jb250cm9sOmZvY3VzOmludmFsaWQge1xyXG4gICBcclxuICAgIGJveC1zaGFkb3c6IDAgMCAwIDAuMnJlbSByZ2JhKDIzMywgMTcsIDEwLCAwLjkxOCk7XHJcbiAgICBvcGFjaXR5OiAwLjU7XHJcbn1cclxuLmNoYW5nZXdhcm5pbmdjb2xvcntcclxuICAgIGNvbG9yOiBicm93bjtcclxufVxyXG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n  });\n}","map":{"version":3,"names":["DashboardComponent","constructor","service","route","customersRecord","ngOnInit","getCustomers","subscribe","data","console","log","deleteUser","id","alert","window","location","reload","update","getOnlyCustomer","navigate","logOut","localStorage","removeItem","_","i0","ɵɵdirectiveInject","i1","CustomerService","i2","Router","_2","selectors","decls","vars","consts","template","DashboardComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","DashboardComponent_Template_button_click_7_listener"],"sources":["C:\\Users\\shasw\\Downloads\\customer_management_app\\src\\app\\dashboard\\dashboard.component.ts","C:\\Users\\shasw\\Downloads\\customer_management_app\\src\\app\\dashboard\\dashboard.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { CustomerService } from '../service/customer.service';\nimport { Router } from '@angular/router';\nimport { Customer } from '../model/Customer';\nimport { User } from '../model/User';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit{\n\n  \n\ncustomersRecord:User[]=[]\n\nconstructor(private service : CustomerService , private route:Router) { }\n\nngOnInit(): void {\nthis.getCustomers();\n}\n\ngetCustomers(){\n  this.service.getCustomers().subscribe((data)=>{\n    console.log(data);\n     this.customersRecord = data;\n  //   this.customersRecord.forEach((data)=>{\n  //     console.log(data);}\n  // )\n  })\n}\n\ndeleteUser(id:any)\n{\n  console.log(id);\n this.service.deleteUser(id).subscribe();\n alert(\"succcessfully deleted\");\n window.location.reload();\n\n\n}\n\nupdate(id:any){\nconsole.log(id);\nthis.service.getOnlyCustomer(id);\nthis.route.navigate(['update'])\n}\n\nlogOut(){\n  localStorage.removeItem('token');\n  this.route.navigate(['login'])\n}\n\n}\n","<nav class=\"navbar navbar-light bg-primary\">\n    <div class=\"container-fluid\">\n      <h2> Welcome to Admin Dashboard </h2>\n      <div class=\"d-flex\">\n        <button routerLink=\"/create\" class=\"btn btn-danger mx-3\">Add-Customer</button>\n        <button (click)=\"logOut()\" class=\"btn btn-danger mx-3\">Log-Out</button>\n      </div>\n    </div>\n</nav>\n\n<div class=\"container-fluid\">\n    <table  class=\"table table-primary mt-5\">\n        <thead>\n            <tr>\n                <th scope=\"col\">userId</th>\n                <th scope=\"col\">userName</th>\n                <!-- <th scope=\"col\">street</th> -->\n                <th scope=\"col\">address</th>\n                <!-- <th scope=\"col\">city</th>\n                <th scope=\"col\">state</th> -->\n                <th scope=\"col\">email</th>\n                <!-- <th scope=\"col\">phone</th>\n                <th scope=\"col\">Update</th>\n                <th scope=\"col\">Delete</th> \n\n            </tr>\n        </thead>\n        <tbody>\n             <tr *ngFor=\"let x of customersRecord\"> \n         \n                <td class=\"table-warning\">{{x.userId}}</td>\n                <td class=\"table-warning\">{{x.userName}}</td>\n                <td class=\"table-warning\">{{x.address}}</td>\n                <td class=\"table-warning\">{{x.email}}</td>\n                <td class=\"table-warning\">{{x.phone}}</td>\n                <td class=\"table-warning\">{{x.task}}</td>\n                <td><button class=\"btn btn-info\" (click)=\"update(x.userId)\"><i class=\"bi bi-pencil-square\"></i> Edit</button></td>\n                <td class=\"table-warning\"><button class=\"btn btn-info\" (click)=\"deleteUser(x.userId)\" >DeleteUser</button></td>\n            </tr>\n        </tbody>\n     </table>\n </div>\n \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  <!-- <form  [formGroup]=\"myReactiveForm\" (ngSubmit)=\"logIn()\">\n  \n                  <div class=\"mb-3\">\n                    <label for=\"email\">User Name</label>\n                    <input type=\"text\" class=\"form-control\" id=\"email\" autocomplete=\"off\" formControlName=\"email\" placeholder=\"enter admin email\">\n                  </div>\n  \n                  <div class=\"mb-3\">\n                    <label for=\"password\">User Name</label>\n                    <input type=\"password\" class=\"form-control\" id=\"password\" formControlName=\"password\" placeholder=\"enter admin password\">\n                  </div>\n               \n                  <button type=\"submit\" class=\"btn btn-primary\">login</button>\n  \n                </form> -->"],"mappings":";;;AAWA,OAAM,MAAOA,kBAAkB;EAM/BC,YAAoBC,OAAyB,EAAWC,KAAY;IAAhD,KAAAD,OAAO,GAAPA,OAAO;IAA6B,KAAAC,KAAK,GAALA,KAAK;IAF7D,KAAAC,eAAe,GAAQ,EAAE;EAE+C;EAExEC,QAAQA,CAAA;IACR,IAAI,CAACC,YAAY,EAAE;EACnB;EAEAA,YAAYA,CAAA;IACV,IAAI,CAACJ,OAAO,CAACI,YAAY,EAAE,CAACC,SAAS,CAAEC,IAAI,IAAG;MAC5CC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;MAChB,IAAI,CAACJ,eAAe,GAAGI,IAAI;MAC9B;MACA;MACA;IACA,CAAC,CAAC;EACJ;;EAEAG,UAAUA,CAACC,EAAM;IAEfH,OAAO,CAACC,GAAG,CAACE,EAAE,CAAC;IAChB,IAAI,CAACV,OAAO,CAACS,UAAU,CAACC,EAAE,CAAC,CAACL,SAAS,EAAE;IACvCM,KAAK,CAAC,uBAAuB,CAAC;IAC9BC,MAAM,CAACC,QAAQ,CAACC,MAAM,EAAE;EAGzB;EAEAC,MAAMA,CAACL,EAAM;IACbH,OAAO,CAACC,GAAG,CAACE,EAAE,CAAC;IACf,IAAI,CAACV,OAAO,CAACgB,eAAe,CAACN,EAAE,CAAC;IAChC,IAAI,CAACT,KAAK,CAACgB,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;EAC/B;EAEAC,MAAMA,CAAA;IACJC,YAAY,CAACC,UAAU,CAAC,OAAO,CAAC;IAChC,IAAI,CAACnB,KAAK,CAACgB,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;EAChC;EAAC,QAAAI,CAAA,G;qBAzCYvB,kBAAkB,EAAAwB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,eAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,MAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAlB9B,kBAAkB;IAAA+B,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,4BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCX/Bb,EAAA,CAAAe,cAAA,aAA4C;QAEjCf,EAAA,CAAAgB,MAAA,mCAA2B;QAAAhB,EAAA,CAAAiB,YAAA,EAAK;QACrCjB,EAAA,CAAAe,cAAA,aAAoB;QACuCf,EAAA,CAAAgB,MAAA,mBAAY;QAAAhB,EAAA,CAAAiB,YAAA,EAAS;QAC9EjB,EAAA,CAAAe,cAAA,gBAAuD;QAA/Cf,EAAA,CAAAkB,UAAA,mBAAAC,oDAAA;UAAA,OAASL,GAAA,CAAAlB,MAAA,EAAQ;QAAA,EAAC;QAA6BI,EAAA,CAAAgB,MAAA,cAAO;QAAAhB,EAAA,CAAAiB,YAAA,EAAS;QAK/EjB,EAAA,CAAAe,cAAA,aAA6B;QAIGf,EAAA,CAAAgB,MAAA,cAAM;QAAAhB,EAAA,CAAAiB,YAAA,EAAK;QAC3BjB,EAAA,CAAAe,cAAA,aAAgB;QAAAf,EAAA,CAAAgB,MAAA,gBAAQ;QAAAhB,EAAA,CAAAiB,YAAA,EAAK;QAE7BjB,EAAA,CAAAe,cAAA,aAAgB;QAAAf,EAAA,CAAAgB,MAAA,eAAO;QAAAhB,EAAA,CAAAiB,YAAA,EAAK;QAG5BjB,EAAA,CAAAe,cAAA,aAAgB;QAAAf,EAAA,CAAAgB,MAAA,aAAK;QAAAhB,EAAA,CAAAiB,YAAA,EAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}