{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../service/customer.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nexport class UpdateComponent {\n  constructor(myService, router) {\n    this.myService = myService;\n    this.router = router;\n    this.customId = \"\";\n    this.customer = {};\n    this.filteredCustomers = [];\n  }\n  ngOnInit() {\n    this.getEmployeeById();\n  }\n  getEmployeeById() {\n    this.customId = this.myService.customeId;\n    this.myService.getCustomers().subscribe(data => {\n      this.filteredCustomers = data.filter(res => {\n        return res.userId === this.customId;\n      });\n      if (this.filteredCustomers.length > 0) {\n        this.customer = this.filteredCustomers[0];\n      }\n      console.log(this.customer);\n    });\n  }\n  function1() {\n    this.myService.updateCustomer(this.customer).subscribe();\n    alert(\"updated the record successfully üíØ\");\n    this.router.navigate(['home']);\n  }\n  static #_ = this.…µfac = function UpdateComponent_Factory(t) {\n    return new (t || UpdateComponent)(i0.…µ…µdirectiveInject(i1.CustomerService), i0.…µ…µdirectiveInject(i2.Router));\n  };\n  static #_2 = this.…µcmp = /*@__PURE__*/i0.…µ…µdefineComponent({\n    type: UpdateComponent,\n    selectors: [[\"app-update\"]],\n    decls: 31,\n    vars: 4,\n    consts: [[1, \"container\"], [1, \"row\"], [1, \"col-md-6\"], [1, \"card\"], [1, \"text-center\"], [3, \"submit\"], [1, \"mb-3\"], [1, \"form-label\"], [\"type\", \"text\", \"id\", \"exampleInputEmail1\", \"aria-describedby\", \"emailHelp\", \"name\", \"uuid\", \"placeholder\", \"enter your pizza id \", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"text\", \"id\", \"exampleInputEmail1\", \"aria-describedby\", \"emailHelp\", \"name\", \"last_name\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"text\", \"id\", \"exampleInputPassword1\", \"name\", \"email\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"text\", \"id\", \"exampleInputPassword1\", \"name\", \"phone\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"], [\"routerLink\", \"/home\"]],\n    template: function UpdateComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.…µ…µelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"h1\");\n        i0.…µ…µtext(6, \"Update Your Customer\");\n        i0.…µ…µelementEnd();\n        i0.…µ…µelementStart(7, \"h5\");\n        i0.…µ…µtext(8, \"\\u2764\\uFE0F Hiiiiii Admin \\u2764\\uFE0F\");\n        i0.…µ…µelementEnd()();\n        i0.…µ…µelement(9, \"hr\");\n        i0.…µ…µelementStart(10, \"form\", 5);\n        i0.…µ…µlistener(\"submit\", function UpdateComponent_Template_form_submit_10_listener() {\n          return ctx.function1();\n        });\n        i0.…µ…µelementStart(11, \"div\", 6)(12, \"label\", 7);\n        i0.…µ…µtext(13, \"user ID\");\n        i0.…µ…µelementEnd();\n        i0.…µ…µelementStart(14, \"input\", 8);\n        i0.…µ…µlistener(\"ngModelChange\", function UpdateComponent_Template_input_ngModelChange_14_listener($event) {\n          return ctx.customer.userId = $event;\n        });\n        i0.…µ…µelementEnd()();\n        i0.…µ…µelementStart(15, \"div\", 6)(16, \"label\", 7);\n        i0.…µ…µtext(17, \"New Task\");\n        i0.…µ…µelementEnd();\n        i0.…µ…µelementStart(18, \"input\", 9);\n        i0.…µ…µlistener(\"ngModelChange\", function UpdateComponent_Template_input_ngModelChange_18_listener($event) {\n          return ctx.customer.task = $event;\n        });\n        i0.…µ…µelementEnd()();\n        i0.…µ…µelementStart(19, \"div\", 6)(20, \"label\", 7);\n        i0.…µ…µtext(21, \"email\");\n        i0.…µ…µelementEnd();\n        i0.…µ…µelementStart(22, \"input\", 10);\n        i0.…µ…µlistener(\"ngModelChange\", function UpdateComponent_Template_input_ngModelChange_22_listener($event) {\n          return ctx.customer.email = $event;\n        });\n        i0.…µ…µelementEnd()();\n        i0.…µ…µelementStart(23, \"div\", 6)(24, \"label\", 7);\n        i0.…µ…µtext(25, \"phone\");\n        i0.…µ…µelementEnd();\n        i0.…µ…µelementStart(26, \"input\", 11);\n        i0.…µ…µlistener(\"ngModelChange\", function UpdateComponent_Template_input_ngModelChange_26_listener($event) {\n          return ctx.customer.phone = $event;\n        });\n        i0.…µ…µelementEnd()();\n        i0.…µ…µelementStart(27, \"button\", 12);\n        i0.…µ…µtext(28, \"update\");\n        i0.…µ…µelementEnd()();\n        i0.…µ…µelementStart(29, \"a\", 13);\n        i0.…µ…µtext(30, \"N0 Need to update go back!!\");\n        i0.…µ…µelementEnd()()()()();\n      }\n      if (rf & 2) {\n        i0.…µ…µadvance(14);\n        i0.…µ…µproperty(\"ngModel\", ctx.customer.userId);\n        i0.…µ…µadvance(4);\n        i0.…µ…µproperty(\"ngModel\", ctx.customer.task);\n        i0.…µ…µadvance(4);\n        i0.…µ…µproperty(\"ngModel\", ctx.customer.email);\n        i0.…µ…µadvance(4);\n        i0.…µ…µproperty(\"ngModel\", ctx.customer.phone);\n      }\n    },\n    dependencies: [i2.RouterLink, i3.…µNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.NgModel, i3.NgForm],\n    styles: [\".card[_ngcontent-%COMP%]{\\n    margin-top: 15px;\\n    border: 1px solid rgb(251, 0, 255);\\n    width : 750px;\\n    padding: 45px;\\n    position: absolute;\\n    top: 10%;\\n    left:30%;\\n}\\na[_ngcontent-%COMP%]{\\n    margin-top: 15px;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvdXBkYXRlL3VwZGF0ZS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksZ0JBQWdCO0lBQ2hCLGtDQUFrQztJQUNsQyxhQUFhO0lBQ2IsYUFBYTtJQUNiLGtCQUFrQjtJQUNsQixRQUFRO0lBQ1IsUUFBUTtBQUNaO0FBQ0E7SUFDSSxnQkFBZ0I7QUFDcEIiLCJzb3VyY2VzQ29udGVudCI6WyIuY2FyZHtcclxuICAgIG1hcmdpbi10b3A6IDE1cHg7XHJcbiAgICBib3JkZXI6IDFweCBzb2xpZCByZ2IoMjUxLCAwLCAyNTUpO1xyXG4gICAgd2lkdGggOiA3NTBweDtcclxuICAgIHBhZGRpbmc6IDQ1cHg7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICB0b3A6IDEwJTtcclxuICAgIGxlZnQ6MzAlO1xyXG59XHJcbmF7XHJcbiAgICBtYXJnaW4tdG9wOiAxNXB4O1xyXG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["UpdateComponent","constructor","myService","router","customId","customer","filteredCustomers","ngOnInit","getEmployeeById","customeId","getCustomers","subscribe","data","filter","res","userId","length","console","log","function1","updateCustomer","alert","navigate","_","i0","…µ…µdirectiveInject","i1","CustomerService","i2","Router","_2","selectors","decls","vars","consts","template","UpdateComponent_Template","rf","ctx","…µ…µelementStart","…µ…µtext","…µ…µelementEnd","…µ…µelement","…µ…µlistener","UpdateComponent_Template_form_submit_10_listener","UpdateComponent_Template_input_ngModelChange_14_listener","$event","UpdateComponent_Template_input_ngModelChange_18_listener","task","UpdateComponent_Template_input_ngModelChange_22_listener","email","UpdateComponent_Template_input_ngModelChange_26_listener","phone","…µ…µadvance","…µ…µproperty"],"sources":["C:\\Users\\shasw\\Downloads\\customer_management_app\\src\\app\\update\\update.component.ts","C:\\Users\\shasw\\Downloads\\customer_management_app\\src\\app\\update\\update.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Customer } from '../model/Customer';\nimport { CustomerService } from '../service/customer.service';\nimport { Router } from '@angular/router';\nimport { User } from '../model/User';\n\n@Component({\n  selector: 'app-update',\n  templateUrl: './update.component.html',\n  styleUrls: ['./update.component.css']\n})\nexport class UpdateComponent implements OnInit {\n\n  \n  customId: string=\"\";\n  customer: User={};\n  filteredCustomers: User[] = [];\n\n  constructor(private myService:CustomerService,private router :Router) { }\n\n  ngOnInit(): void {\n    this.getEmployeeById();\n  }\n  getEmployeeById() {\n    this.customId = this.myService.customeId;\n\n    this.myService.getCustomers().subscribe((data) => {\n      this.filteredCustomers = data.filter((res: User) => {\n        return res.userId === this.customId;\n      });\n\n      if (this.filteredCustomers.length > 0) {\n        this.customer = this.filteredCustomers[0];\n      }\n    console.log(this.customer);\n      \n    });\n  }\n  \n  function1(){\n    this.myService.updateCustomer(this.customer).subscribe();\n    alert(\"updated the record successfully üíØ\")\n    this.router.navigate(['home'])\n    \n\n  }\n}\n","\n<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-md-6\">\n            <div class=\"card\">\n                <div class=\"text-center\">\n                    <h1>Update Your Customer</h1>\n                    <h5>‚ù§Ô∏è Hiiiiii Admin ‚ù§Ô∏è</h5>\n                </div>\n                <hr>\n                <form  (submit)=\"function1()\">\n\n                    <div class=\"mb-3\">\n                        <label class=\"form-label\">user ID</label>\n                        <input type=\"text\" class=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" name=\"uuid\" [(ngModel)]=\"customer.userId\" placeholder=\"enter your pizza id \" >\n                    </div>\n                    <!-- <div class=\"mb-3\">\n                        <label class=\"form-label\">User Name</label>\n                        <input type=\"text\" class=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" name=\"first_name\" [(ngModel)]=\"customer.userName\" >\n                    </div> -->\n\n                    <div class=\"mb-3\">\n                        <label class=\"form-label\">New Task</label>\n                        <input type=\"text\" class=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" name=\"last_name\" [(ngModel)]=\"customer.task\" >\n\n                    </div>\n<!-- \n                    <div class=\"mb-3\">\n                        <label class=\"form-label\">street</label>\n                        <input type=\"email\" class=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" name=\"street\" [(ngModel)]=\"customer.street\" >\n                      \n                    </div>\n                    <div class=\"mb-3\">\n                        <label class=\"form-label\">address</label>\n                        <input type=\"text\" class=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" name=\"address\" [(ngModel)]=\"customer.address\" >\n                      \n                    </div>\n\n                    <div class=\"mb-3\">\n                        <label class=\"form-label\">city</label>\n                        <input type=\"text\" class=\"form-control\" id=\"exampleInputPassword1\" name=\"city\" [(ngModel)]=\"customer.city\" >\n                    </div>\n                    <div class=\"mb-3\">\n                        <label class=\"form-label\">state</label>\n                        <input type=\"text\" class=\"form-control\" id=\"exampleInputPassword1\" name=\"state\" [(ngModel)]=\"customer.state\" >\n                    </div> -->\n                    <div class=\"mb-3\">\n                        <label class=\"form-label\">email</label>\n                        <input type=\"text\" class=\"form-control\" id=\"exampleInputPassword1\" name=\"email\" [(ngModel)]=\"customer.email\" >\n                    </div>\n                    <div class=\"mb-3\">\n                        <label class=\"form-label\">phone</label>\n                        <input type=\"text\" class=\"form-control\" id=\"exampleInputPassword1\" name=\"phone\" [(ngModel)]=\"customer.phone\" >\n                    </div>\n                    \n\n                    <button type=\"submit\" class=\"btn btn-primary\">update</button>\n\n                </form>\n                <a routerLink=\"/home\">N0 Need to update go back!!</a>\n\n            </div>\n        </div>\n    </div>\n</div>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}